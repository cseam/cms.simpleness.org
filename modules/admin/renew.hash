#!/usr/bin/perl

use strict;
use lib '..';
use CONFIG;
use utf8;

use POSIX;
use WWW::Mechanize;

my $q = $main::q;
my $db = $main::db;
my $tt = $main::tt;
my $template = $main::template;
my $SESSION = $main::SESSION;
my $output = '';

my $r;

ban 'email_page' or

{

    '/admin/renew/sitemap' => sub {
        my $mech = WWW::Mechanize->new();
        my %history;
        my $cp = $db->sql( "select content_page from base_content where content_page NOT REGEXP '_.*' group by content_page" );
        my $gallery = $db->sql( "SELECT gal_key FROM base_gallery WHERE lang='en'" );
        $r = $db->sql( "SELECT category_id, ship_id, type, status FROM ships WHERE (type='sell' OR type='buy' OR type='rent' OR type='freight') 
                        AND (status='top' OR status='checked' OR status='waiting' OR status='sold')" );
        foreach ( @{$CONFIG->{languages}} ) {
            $_ = ( $_ eq $CONFIG->{default_language} )? $CONFIG->{site} : $_.'.'.$CONFIG->{site};
            $history{'http://'.$_.'/'} = 1;
            foreach my $s ( (
                                'news', 'gallery',
                            ) ) {
                $history{'http://'.$_.'/'.$s} = 1;
            }
            foreach my $s (@$cp) {
                $history{'http://'.$_.$s->{content_page}} = 1;
            }
            foreach my $s (@$gallery) {
                $history{'http://'.$_.'/gallery/'.$s->{gal_key}} = 1;
            }
        }
        while ( grep { $history{$_} == 0 } keys %history ) {
            foreach my $url ( grep {$history{$_}==0} keys %history ) {
                $history{$url}=1;
                $mech->get( $url );
                my @f = $mech->links();
                foreach (@f) {
                    $_ = $_->url_abs();
                    if ( m%^http://(\w\w\.)?$CONFIG->{site}% 
                        && $_!~/css$/ && $_!~/jpg$/ && $_!~/rtf$/ && $_!~/pdf$/ && $_!~/ico$/ && $_!~/\#$/ ) {
                        $history{$_} = 0 unless $history{$_};
                    }
                }
            }
        }
#        my $all;
#        $all .= $_."<br>" foreach sort keys %history;
        my $output;
        $template->process('xml/sitemap.tpl', { %$tt, 
                pages => [ sort keys %history ], 
                priority => sub { $_ = shift; $_ = @{[ /(\/)/g ]}; (int(20/$_)/10); } }, \$output );
        open F, '>sitemap.xml'; print F $output; close F;
        return "done<br>";
    },
    

};
